image: maven:3.6.3-adoptopenjdk-14
variables:
  CUSTOM_MAVEN_CLI_OPTS: "-s .m2/settings.xml --batch-mode"
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository -Dmaven.wagon.http.ssl.insecure=true -Dmaven.wagon.http.ssl.allowall=true -Dmaven.wagon.http.ssl.ignore.validity.dates=true"
  APP_IMAGE_NAME: "nearmi.registry/nearmi/shop"
  DOCKER_TLS_CERTDIR: "/certs"
  JAR_ARTIFACT: "shop*.jar"

cache:
  paths:
    - .m2/repository/
  key: "nearmi_shop_maven"
stages:
  - build
  - test
  - package
  - deploy

build:
  stage: build
  script:
    - echo "cleaning and building project... "
    - mvn ${CUSTOM_MAVEN_CLI_OPTS} clean compile
  tags:
    - kubernetes
test:
  stage: test
  script:
    - echo "executing tests"
    - mvn ${CUSTOM_MAVEN_CLI_OPTS} test
  tags:
    - kubernetes
package:
  image: maven:3.6.3-adoptopenjdk-14
  stage: package
  script:
    - mvn ${CUSTOM_MAVEN_CLI_OPTS} package -DskipTests=true
    - TAG=$(mvn help:evaluate -Dexpression=project.version | grep -e '^[^\[]')
    - echo $TAG > version.info
  artifacts:
    paths:
      - version.info
      - ./target/${JAR_ARTIFACT}
    expire_in: 1 days
  tags:
    - kubernetes
deploy:
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [ "" ]
  stage: deploy
  dependencies:
    - package
  before_script:
    - cp /conf/rootCA.crt /kaniko/ssl/certs/
  script:
    - |
      TAG=$(cat version.info);
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"nearmi.registry\":{\"username\":\"${NEXUS_LOGIN}\",\"password\":\"${NEXUS_PASSWORD}\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/Dockerfile --build-arg VERSION="${TAG}" --destination ${APP_IMAGE_NAME}:${TAG}
  tags:
    - kubernetes

